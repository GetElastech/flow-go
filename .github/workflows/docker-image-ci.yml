name: Docker Image CI

on:
  push:
    branches: 
      - master
      - 'feature/**' 
    tags: [ 'v*.*.*' ]

env:
  CONTAINER_REGISTRY: gcr.io/dapper-flow

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

#       # https://github.com/docker/login-action
#       - id: 'auth'
#         if: github.event_name != 'pull_request'
#         name: 'Authenticate to Google Cloud'
#         uses: 'google-github-actions/auth@v0'
#         with:
#           token_format: 'access_token'
#           workload_identity_provider: 'projects/97291604265/locations/global/workloadIdentityPools/gh-pool/providers/gh-provider'
#           service_account: 'gh-runner@dapper-flow.iam.gserviceaccount.com'
          
#       - name: Docker login
#         run: |-
#           echo '${{ steps.auth.outputs.access_token }}' | docker login -u oauth2accesstoken --password-stdin https://gcr.io
        
#       - name: Login to GCR
#         if: github.event_name != 'pull_request'
#         uses: docker/login-action@v1
#         with:
#           registry: ${{ env.CONTAINER_REGISTRY }}
#           username: oauth2accesstoken
#           password: ${{ steps.auth.outputs.access_token }}

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: '${{ secrets.GOOGLE_CREDENTIALS }}'
      
      - name: Login to GCR
        uses: docker/login-action@v1
        with:
          registry: gcr.io
          username: _json_key
          password: ${{ secrets.GOOGLE_CREDENTIALS }}

      # Build docker image
      - name: Build Docker image
        if: github.event_name != 'pull_request'
        id: build-image
        run: make CONTAINER_REGISTRY='${{ env.CONTAINER_REGISTRY }}' docker-build-flow
      
      # Push docker image
      - name: Push Docker image
        if: github.event_name != 'pull_request'
        id: push-image
        run: |-
          make CONTAINER_REGISTRY='${{ env.CONTAINER_REGISTRY }}' docker-push-flow
